/*
Copyright 2019 JD Cloud

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kubernetes-local-volume/kubernetes-local-volume/pkg/apis/storage/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// LocalVolumeLister helps list LocalVolumes.
type LocalVolumeLister interface {
	// List lists all LocalVolumes in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.LocalVolume, err error)
	// LocalVolumes returns an object that can list and get LocalVolumes.
	LocalVolumes(namespace string) LocalVolumeNamespaceLister
	LocalVolumeListerExpansion
}

// localVolumeLister implements the LocalVolumeLister interface.
type localVolumeLister struct {
	indexer cache.Indexer
}

// NewLocalVolumeLister returns a new LocalVolumeLister.
func NewLocalVolumeLister(indexer cache.Indexer) LocalVolumeLister {
	return &localVolumeLister{indexer: indexer}
}

// List lists all LocalVolumes in the indexer.
func (s *localVolumeLister) List(selector labels.Selector) (ret []*v1alpha1.LocalVolume, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LocalVolume))
	})
	return ret, err
}

// LocalVolumes returns an object that can list and get LocalVolumes.
func (s *localVolumeLister) LocalVolumes(namespace string) LocalVolumeNamespaceLister {
	return localVolumeNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// LocalVolumeNamespaceLister helps list and get LocalVolumes.
type LocalVolumeNamespaceLister interface {
	// List lists all LocalVolumes in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.LocalVolume, err error)
	// Get retrieves the LocalVolume from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.LocalVolume, error)
	LocalVolumeNamespaceListerExpansion
}

// localVolumeNamespaceLister implements the LocalVolumeNamespaceLister
// interface.
type localVolumeNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all LocalVolumes in the indexer for a given namespace.
func (s localVolumeNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.LocalVolume, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LocalVolume))
	})
	return ret, err
}

// Get retrieves the LocalVolume from the indexer for a given namespace and name.
func (s localVolumeNamespaceLister) Get(name string) (*v1alpha1.LocalVolume, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("localvolume"), name)
	}
	return obj.(*v1alpha1.LocalVolume), nil
}
